{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const productApi = createApi({\n  reducerPath: 'productApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/api/v1\"\n  }),\n  endpoints: builder => ({\n    getProducts: builder.query({\n      query: params => ({\n        url: \"/products\"\n      })\n    }),\n    getProductDetails: builder.query({\n      query: id => `/products/${id}`\n    })\n  })\n});\nexport const {\n  useGetProductsQuery\n} = productApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getProducts","query","params","url","getProductDetails","id","useGetProductsQuery"],"sources":["C:/Users/vanda/OneDrive/Documents/EcomGrove/frontend/src/redux/api/productsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const productApi = createApi({\r\n    reducerPath: 'productApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: \"/api/v1\" }),\r\n    endpoints: (builder) => ({\r\n        getProducts: builder.query({\r\n            query: (params) => ({\r\n                url: \"/products\",\r\n            }),\r\n        }),\r\n        getProductDetails: builder.query({\r\n            query: (id) => `/products/${id}`\r\n        })\r\n    }),\r\n});\r\n\r\nexport const { useGetProductsQuery } = productApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAU,CAAC,CAAC;EACjDC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAGC,MAAM,KAAM;QAChBC,GAAG,EAAE;MACT,CAAC;IACL,CAAC,CAAC;IACFC,iBAAiB,EAAEL,OAAO,CAACE,KAAK,CAAC;MAC7BA,KAAK,EAAGI,EAAE,IAAM,aAAYA,EAAG;IACnC,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAoB,CAAC,GAAGZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}